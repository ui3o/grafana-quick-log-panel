name: Auto Tag CI

on:
  push:
    tags:        
      - "v*.*.*" # Run workflow on version tags, e.g. v1.0.0.

jobs:
  init:
    runs-on: ubuntu-latest
    outputs:
      skip: ${{ steps.ci-skip-step.outputs.ci-skip }}
      skip-not: ${{ steps.ci-skip-step.outputs.ci-skip-not }}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - id: ci-skip-step
        uses: mstachniuk/ci-skip@v1
        with:
          commit-filter: 'auto-version'

  build:
    needs: init
    if: ${{ needs.init.outputs.skip == 'false' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set GRAFANA_VERSION_NUMBER
      run: |
        set -x
        GIT_TAG_VERSION=${GITHUB_REF#refs/tags/}
        echo $GIT_TAG_VERSION
        CURREV=$(git rev-parse HEAD)
        echo $CURREV
        BRANCH_REF_NAME=$(git ls-remote --heads origin | awk -v rev="$CURREV" '{if ($1 == rev) {gsub("refs/heads/", "", $2); print $2}}')
        echo $BRANCH_REF_NAME
        REPOPATH=$(git remote -v | grep fetch | awk '{print $2}' | sed "s/.*github/github/g")
        echo -e '[user]\n\temail = ui3o.com@gmail.com\n\tname = ui3o.com' >> .git/config
        git config --global http.sslVerify false
        # go to ahead branch
        git fetch --all
        git reset --hard origin/$BRANCH_REF_NAME
        git clean -df
        git checkout $BRANCH_REF_NAME
        git pull
        # do the version change
        yarn version --no-git-tag-version --new-version $GIT_TAG_VERSION
        git commit --allow-empty -m "auto-version $GIT_TAG_VERSION"
        # do the version change
        git tag -f $GIT_TAG_VERSION
        git push --force --atomic https://$DEPLOY_USER:$DEPLOY_API_KEY@$REPOPATH $BRANCH_REF_NAME $GIT_TAG_VERSION
   